import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "../globals.css";
import { NavigationMenuDemo } from "@/components/navbar";
import localFont from "next/font/local";
import { getMessages } from "next-intl/server";
import { NextIntlClientProvider } from "next-intl";
import { locales } from "@/config";

const eastmanRoman = localFont({
  src: "../../../public/fonts/EastmanRomanTrial-Regular.otf",
  variable: '--font-eastman-roman',
  display: 'swap',
});

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

type Props = {
  children: React.ReactNode;
  params: Promise<{locale: string}>;
};

export function generateStaticParams() {
  return locales.map((locale) => ({ locale }));
}

export default async function RootLayout({
  children,
  params
}: Props) {
  // Aguardar os par√¢metros
  const { locale } = await params;
  
  // Buscar as mensagens para o locale atual
  const messages = await getMessages({locale});
  
  return (
    <html lang={locale}>
      <body
        className={`${geistSans.variable} ${geistMono.variable} ${eastmanRoman.variable} antialiased`}
      >
        <NextIntlClientProvider messages={messages} locale={locale}>
          <NavigationMenuDemo />
          {children}
        </NextIntlClientProvider>
      </body>
    </html>
  );
}
